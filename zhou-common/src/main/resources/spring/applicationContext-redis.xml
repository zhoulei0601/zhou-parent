<?xml version="1.0" encoding="UTF-8"?> 
<beans xmlns="http://www.springframework.org/schema/beans" 
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p" 
  xmlns:context="http://www.springframework.org/schema/context" 
  xmlns:mvc="http://www.springframework.org/schema/mvc" 
  xmlns:cache="http://www.springframework.org/schema/cache"
  xsi:schemaLocation="http://www.springframework.org/schema/beans   
            http://www.springframework.org/schema/beans/spring-beans.xsd   
            http://www.springframework.org/schema/context   
            http://www.springframework.org/schema/context/spring-context.xsd   
            http://www.springframework.org/schema/mvc   
            http://www.springframework.org/schema/mvc/spring-mvc.xsd 
            http://www.springframework.org/schema/cache  
            http://www.springframework.org/schema/cache/spring-cache.xsd">
    <context:property-placeholder location="classpath*:properties/redis-config.properties"/>
  
   <!-- redis 相关配置 --> 
   <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">  
     <property name="maxIdle" value="${redis.maxIdle}" />   
     <property name="maxWaitMillis" value="${redis.maxWait}" />  
     <property name="testOnBorrow" value="${redis.testOnBorrow}" />  
   </bean>  
  
   <bean id="JedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" 
       p:host-name="${redis.host}" p:port="${redis.port}" p:password="${redis.pass}" p:pool-config-ref="poolConfig"/>

    <!--注意：StringRedisTemplate继承RedisTemplate,但是两者的数据是不共通的。
        主要区别使用的序列化类。RedisTemplate使用的是JdkSerializationRedisSerializer StringRedisTemplate使用的是StringRedisSerializer
    -->
    <!--字符串类型数据-->
    <bean id="stringRedisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
        <property name="connectionFactory" ref="JedisConnectionFactory"></property>
    </bean>

    <!--数据是复杂的对象类型，取出的时候又不想做任何的数据转换，直接从Redis里面取出一个对象-->
   <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">  
       <property name="connectionFactory" ref="JedisConnectionFactory" />
       <property name="keySerializer">
           <bean  class="org.springframework.data.redis.serializer.StringRedisSerializer"></bean>
       </property>
       <property name="valueSerializer">
           <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"></bean>
       </property>
   </bean>
      
</beans>  